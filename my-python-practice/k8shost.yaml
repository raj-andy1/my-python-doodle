AWSTemplateFormatVersion: "2010-09-09"
Description: "template to provision ec2 instances to install K8s"
Resources:
  DummyServer:
    Type: "AWS::EC2::Instance"
    Metadata:
      AWS::CloudFormation::Init:
        files:
          /etc/osquery/kolide.enrollment_secret:
            mode: "000644"
            owner: root
            group: root
            content:
              !Sub |
              {{resolve:secretsmanager:arn:aws:secretsmanager:us-east-1:531915269918:secret:OsquerySecretForLinux-0Xwaj5:}}
    Properties:
      ImageId:  "ami-0dd273d94ed0540c0"
      BlockDeviceMappings:
        - DeviceName: "/dev/sdb"
          Ebs:
            VolumeType: "gp2"
            DeleteOnTermination: "false"
            VolumeSize: "20"
      InstanceType: "t3.medium"
      IamInstanceProfile: "FieldOperationsGovernance"
      SecurityGroupIds:
        - "sg-040889562f1659c13"
      SubnetId: "subnet-097862f7429bc6bc5"
      Tags:
        -
          Key: "resource_owner"
          Value: "arajagopalan"
        -
          Key: "service_name"
          Value: "self-learning"
        -
          Key: "business_unit"
          Value: "FieldOperations"
        -
          Key: "Name"
          Value: !Ref AWS::StackName

      UserData: IyEvYmluL3NoCgpzdWRvIGFwdC1nZXQgdXBkYXRlCnN1ZG8gYXB0LWdldCBpbnN0YWxsIC15IGFwdC10cmFuc3BvcnQtaHR0cHMgY2EtY2VydGlmaWNhdGVzIGN1cmwgZ251cGcgbHNiLXJlbGVhc2UKCiNkb3dubG9hZCBkb2NrZXIgcHVibGljIGtleQpjdXJsIC1mc1NMIGh0dHBzOi8vZG93bmxvYWQuZG9ja2VyLmNvbS9saW51eC91YnVudHUvZ3BnIHwgc3VkbyBncGcgLS1kZWFybW9yIC1vIC91c3Ivc2hhcmUva2V5cmluZ3MvZG9ja2VyLWFyY2hpdmUta2V5cmluZy5ncGcKZWNobyAiZGViIFthcmNoPWFtZDY0IHNpZ25lZC1ieT0vdXNyL3NoYXJlL2tleXJpbmdzL2RvY2tlci1hcmNoaXZlLWtleXJpbmcuZ3BnXSBodHRwczovL2Rvd25sb2FkLmRvY2tlci5jb20vbGludXgvdWJ1bnR1ICQobHNiX3JlbGVhc2UgLWNzKSBzdGFibGUiIHwgc3VkbyB0ZWUgL2V0Yy9hcHQvc291cmNlcy5saXN0LmQvZG9ja2VyLmxpc3QgPiAvZGV2L251bGwKCiNpbnN0YWxsIGRvY2tlcgpzdWRvIGFwdC1nZXQgdXBkYXRlCnN1ZG8gYXB0LWdldCBpbnN0YWxsIC15IGpxIGRvY2tlci1jZSBkb2NrZXItY2UtY2xpIGNvbnRhaW5lcmQuaW8KCgojRG93bmxvYWQgT1NRVUVSWQpjdXJsIC1PIGh0dHBzOi8vcGtnLm9zcXVlcnkuaW8vZGViL29zcXVlcnlfNC44LjAtMS5saW51eF9hbWQ2NC5kZWIKCiNJbnN0YWxsIE9TUVVFUlkKc3VkbyBkcGtnIC1pIG9zcXVlcnlfNC44LjAtMS5saW51eF9hbWQ2NC5kZWIKCiNDb3B5IE9TUVVFUlkgc2FtcGxlIGNvbmZpZyBmaWxlCmNwIC91c3Ivc2hhcmUvb3NxdWVyeS9vc3F1ZXJ5LmV4YW1wbGUuY29uZiAvZXRjL29zcXVlcnkvb3NxdWVyeS5jb25mCgojSW5zdGFsbCBqcQp5dW0gaW5zdGFsbCBqcSAteQoKI0dldCBzZWNyZXQKL3Vzci9sb2NhbC9iaW4vYXdzIHNlY3JldHNtYW5hZ2VyIGdldC1zZWNyZXQtdmFsdWUgLS1zZWNyZXQtaWQgYXJuOmF3czpzZWNyZXRzbWFuYWdlcjp1cy1lYXN0LTE6NTMxOTE1MjY5OTE4OnNlY3JldDpPc3F1ZXJ5U2VjcmV0Rm9yTGludXgtMFh3YWo1IC0tcmVnaW9uIHVzLWVhc3QtMSB8IGpxIC0tcmF3LW91dHB1dCAnLlNlY3JldFN0cmluZycgfCBqcSAtciAnLlsia29saWRlLmVucm9sbG1lbnRfc2VjcmV0Il0nID4gL2V0Yy9vc3F1ZXJ5L2tvbGlkZS5lbnJvbGxtZW50X3NlY3JldAoKI0RlY2xhcmUgYSB2YXJpYWJsZSB0byBnZXQgQVdTIEFjY291bnQgSUQKQUNDT1VOVElEPSQoY3VybCAtcyBodHRwOi8vMTY5LjI1NC4xNjkuMjU0L2xhdGVzdC9keW5hbWljL2luc3RhbmNlLWlkZW50aXR5L2RvY3VtZW50IHwgZ3JlcCAtb1AgJyg/PD0iYWNjb3VudElkIiA6ICIpW14iXSooPz0iKScpCiNDcmVhdGUgT1NRVUVSWSBjb25maWcgZmxhZyBmaWxlCmVjaG8gIi0tZm9yY2U9dHJ1ZQotLWhvc3RfaWRlbnRpZmllcj1ob3N0bmFtZQotLXRsc19ob3N0bmFtZT1mbGVldC1zZXJ2ZXIuc2VydmljZXMuYXRsYXNzaWFuLmNvbQotLWNvbmZpZ19wbHVnaW49dGxzCi0tY29uZmlnX3Rsc19yZWZyZXNoPTMwMAotLWVucm9sbF90bHNfZW5kcG9pbnQ9L2FwaS92MS9vc3F1ZXJ5L2Vucm9sbAotLWNvbmZpZ190bHNfZW5kcG9pbnQ9L2FwaS92MS9vc3F1ZXJ5L2NvbmZpZwotLWVucm9sbF9zZWNyZXRfcGF0aD0vZXRjL29zcXVlcnkva29saWRlLmVucm9sbG1lbnRfc2VjcmV0Ci0tbG9nZ2VyX21pbl9zdGF0dXM9MgotLWF3c19raW5lc2lzX3N0cmVhbT1wcm9kLWxvZ3MKLS1hd3Nfc3RzX2Fybl9yb2xlPWFybjphd3M6aWFtOjo5MTU5MjY4ODkzOTE6cm9sZS9waXBlbGluZS1wcm9kLWxvZy1wcm9kdWNlci0kQUNDT1VOVElECi0tYXdzX3JlZ2lvbj11cy1lYXN0LTEKLS1hd3Nfc3RzX3JlZ2lvbj11cy1lYXN0LTEKLS1hd3Nfc3RzX3Nlc3Npb25fbmFtZT1vc3F1ZXJ5CiIgPiAvZXRjL29zcXVlcnkvb3NxdWVyeS5mbGFncwoKI0dldCBPU1FVRVJZIHZlcnNpb24KT1NRVUVSWVZFUlNJT049JChvc3F1ZXJ5ZCAtLXZlcnNpb24gfCBncmVwIC1QbyAnWzAtOV0uWzAtOV0uWzAtOV0qJykKCiNFbnYgZmlsZSBmb3IgT1NRVUVSWQplY2hvICJGTEFHX0ZJTEU9Ii9ldGMvb3NxdWVyeS9vc3F1ZXJ5LmZsYWdzIgpDT05GSUdfRklMRT0iL2V0Yy9vc3F1ZXJ5L29zcXVlcnkuY29uZiIKTE9DQUxfUElERklMRT0iL3Zhci9vc3F1ZXJ5L29zcXVlcnlkLnBpZGZpbGUiClBJREZJTEU9Ii92YXIvcnVuL29zcXVlcnlkLnBpZGZpbGUiCiMgQ3VzdG9tIGVudiB2YXJzIGRlY29yYXRvcnMKT1NRVUVSWV9TRVJWSUNFPVByYWN0aWNlRGV2ZWxvcG1lbnRUZWFtCk9TUVVFUllfRU5WPW9zcXVlcnlfZmllbGRvcHMKT1NRVUVSWV9TRVJWSUNFX1ZFUlNJT049JE9TUVVFUllWRVJTSU9OCk9TUVVFUllfREVQTE9ZTUVOVF9JRD1wcm9kCiIgPi9ldGMvc3lzY29uZmlnL29zcXVlcnlkCgojQ29uZmlndXJlIHRoZSBEb2NrZXIgZGFlbW9uLCBpbiBwYXJ0aWN1bGFyIHRvIHVzZSBzeXN0ZW1kIGZvciB0aGUgbWFuYWdlbWVudCBvZiB0aGUgY29udGFpbmVy4oCZcyBjZ3JvdXBzCmNhdCA8PEVPRiB8IHN1ZG8gdGVlIC9ldGMvZG9ja2VyL2RhZW1vbi5qc29uCnsKICAiZXhlYy1vcHRzIjogWyJuYXRpdmUuY2dyb3VwZHJpdmVyPXN5c3RlbWQiXSwKICAibG9nLWRyaXZlciI6ICJqc29uLWZpbGUiLAogICJsb2ctb3B0cyI6IHsKICAgICJtYXgtc2l6ZSI6ICIxMDBtIgogIH0sCiAgInN0b3JhZ2UtZHJpdmVyIjogIm92ZXJsYXkyIgp9CkVPRgoKI1Jlc3RhcnQgRG9ja2VyIGFuZCBlbmFibGUgb24gYm9vdDoKc3VkbyAvYmluL3N5c3RlbWN0bCBlbmFibGUgZG9ja2VyCnN1ZG8gL2Jpbi9zeXN0ZW1jdGwgZGFlbW9uLXJlbG9hZApzdWRvIC9iaW4vc3lzdGVtY3RsIHJlc3RhcnQgZG9ja2VyCgojSW5zdGFsbCBLdWJlcm5ldGVzCiNEb3dubG9hZCB0aGUgR29vZ2xlIENsb3VkIHB1YmxpYyBzaWduaW5nIGtleToKc3VkbyBjdXJsIC1mc1NMbyAvdXNyL3NoYXJlL2tleXJpbmdzL2t1YmVybmV0ZXMtYXJjaGl2ZS1rZXlyaW5nLmdwZyBodHRwczovL3BhY2thZ2VzLmNsb3VkLmdvb2dsZS5jb20vYXB0L2RvYy9hcHQta2V5LmdwZwoKI0FkZCB0aGUgS3ViZXJuZXRlcyBhcHQgcmVwb3NpdG9yeQplY2hvICJkZWIgW3NpZ25lZC1ieT0vdXNyL3NoYXJlL2tleXJpbmdzL2t1YmVybmV0ZXMtYXJjaGl2ZS1rZXlyaW5nLmdwZ10gaHR0cHM6Ly9hcHQua3ViZXJuZXRlcy5pby8ga3ViZXJuZXRlcy14ZW5pYWwgbWFpbiIgfCBzdWRvIHRlZSAvZXRjL2FwdC9zb3VyY2VzLmxpc3QuZC9rdWJlcm5ldGVzLmxpc3QKCiNVcGRhdGUgYXB0IHBhY2thZ2UgaW5kZXgsIGluc3RhbGwga3ViZWxldCwga3ViZWFkbSBhbmQga3ViZWN0bCwgYW5kIHBpbiB0aGVpciB2ZXJzaW9uCnN1ZG8gYXB0LWdldCB1cGRhdGUKc3VkbyBhcHQtZ2V0IGluc3RhbGwgLXkga3ViZWxldCBrdWJlYWRtIGt1YmVjdGwKc3VkbyBhcHQtbWFyayBob2xkIGt1YmVsZXQga3ViZWFkbSBrdWJlY3RsCgojU3RhcnQgT1NRVUVSWQpzdWRvIHNlcnZpY2Ugb3NxdWVyeWQgc3RhcnQ=


